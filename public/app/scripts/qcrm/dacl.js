// Generated by CoffeeScript 1.6.3
(function() {
  angular.module('qcrm').factory('dacl', [
    'User', 'ACL', 'Role', 'RoleMapping', 'Scope', function(User, ACL, Role, RoleMapping, Scope) {
      return {
        getRoles: function() {
          return Role.find();
        },
        getPermissions: function() {
          return ACL.find();
        },
        setRole: function(user, role) {
          if ('string' === typeof role) {
            role = Role.findOne({
              name: role
            });
            return role.$promise.then(function(r) {
              return RoleMapping.upsert({
                role: r,
                principalType: 'USER',
                principalId: user.id
              });
            });
          } else {
            return RoleMapping.upsert({
              role: role,
              principalType: 'USER',
              principalId: user.id
            });
          }
        },
        allowForRole: function(role, model, action) {
          return ACL.create({
            model: model,
            property: action || '*',
            permition: 'ALLOW',
            accessType: '*',
            principalType: 'ROLE',
            principalId: role.name
          });
        },
        denyForRole: function(role, model, action) {
          return ACL.create({
            model: model,
            property: action || '*',
            permition: 'DENY',
            accessType: '*',
            principalType: 'ROLE',
            principalId: role.name
          });
        },
        allowForUser: function(user, model, action) {
          return ACL.create({
            model: model,
            property: action || '*',
            permition: 'ALLOW',
            accessType: '*',
            principalType: 'USER',
            principalId: user.id
          });
        },
        denyForUser: function(user, model, action) {
          return ACL.create({
            model: model,
            property: action || '*',
            permition: 'DENY',
            accessType: '*',
            principalType: 'USER',
            principalId: user.id
          });
        },
        can: function(role, model, action) {}
      };
    }
  ]);

}).call(this);

/*
//@ sourceMappingURL=dacl.map
*/
